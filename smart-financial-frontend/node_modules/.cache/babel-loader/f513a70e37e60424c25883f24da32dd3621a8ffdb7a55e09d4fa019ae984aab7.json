{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import Slider from '@mui/material/Slider';\n\n// const Dashboard = () => {\n//   const [profile, setProfile] = useState(null);\n//   const [error, setError] = useState('');\n//   const [recommendation, setRecommendation] = useState('');\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get('http://localhost:5000/api/profile', {\n//           headers: {\n//             Authorization: `Bearer ${token}`\n//           }\n//         });\n//         setProfile(res.data);\n//       } catch (err) {\n//         setError(err.response?.data?.message || 'Failed to load profile');\n//       }\n//     };\n\n//     fetchProfile();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchRecommendation = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:5000/api/recommendation/${profile.userId}`);\n//         setRecommendation(res.data.recommendation);\n//       } catch (error) {\n//         console.error(\"Error fetching recommendation:\", error);\n//       }\n//     };\n\n//     if (profile) {\n//       fetchRecommendation();\n//     }\n//   }, [profile]);\n\n//   if (error) return <div>Error: {error}</div>;\n//   if (!profile) return <div>Loading profile...</div>;\n\n//   return (\n//     <div className=\"p-6 max-w-xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Welcome, {profile.name}!</h2>\n//       <p><strong>Monthly Income:</strong> â‚¹{profile.monthlyIncome}</p>\n//       <p><strong>Monthly Expenses:</strong> â‚¹{profile.monthlyExpenses}</p>\n//       <p><strong>Risk Appetite:</strong> {profile.riskAppetite}</p>\n//       <p><strong>Financial Goal:</strong> {profile.financialGoal}</p>\n//       <p><strong>Investment Horizon:</strong> {profile.investmentHorizon} years</p>\n\n//       {recommendation && (\n//         <div className=\"mt-6 p-4 border border-gray-300 bg-gray-50 rounded\">\n//           <h3 className=\"text-xl font-semibold mb-2\">ðŸ’¡ Investment Recommendation</h3>\n//           <p>{recommendation}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// import { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\n\n// const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n// const investmentData = [\n//   { name: 'Stocks', value: 4000 },\n//   { name: 'Mutual Funds', value: 3000 },\n//   { name: 'Real Estate', value: 2000 },\n//   { name: 'Gold', value: 1000 }\n// ];\n\n// <PieChart width={400} height={300}>\n//   <Pie\n//     data={investmentData}\n//     cx={200}\n//     cy={150}\n//     labelLine={false}\n//     label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n//     outerRadius={100}\n//     fill=\"#8884d8\"\n//     dataKey=\"value\"\n//   >\n//     {investmentData.map((entry, index) => (\n//       <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//     ))}\n//   </Pie>\n//   <Tooltip />\n//   <Legend />\n// </PieChart>import { jwtDecode } from \"jwt-decode\"; // âœ… Correct import","map":{"version":3,"names":[],"sources":["C:/Users/prajw/Desktop/TCS assignment/smart_financial_advisor/smart-financial-frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import Slider from '@mui/material/Slider';\r\n\r\n// const Dashboard = () => {\r\n//   const [profile, setProfile] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const [recommendation, setRecommendation] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchProfile = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get('http://localhost:5000/api/profile', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`\r\n//           }\r\n//         });\r\n//         setProfile(res.data);\r\n//       } catch (err) {\r\n//         setError(err.response?.data?.message || 'Failed to load profile');\r\n//       }\r\n//     };\r\n\r\n//     fetchProfile();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecommendation = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:5000/api/recommendation/${profile.userId}`);\r\n//         setRecommendation(res.data.recommendation);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching recommendation:\", error);\r\n//       }\r\n//     };\r\n\r\n//     if (profile) {\r\n//       fetchRecommendation();\r\n//     }\r\n//   }, [profile]);\r\n\r\n//   if (error) return <div>Error: {error}</div>;\r\n//   if (!profile) return <div>Loading profile...</div>;\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">Welcome, {profile.name}!</h2>\r\n//       <p><strong>Monthly Income:</strong> â‚¹{profile.monthlyIncome}</p>\r\n//       <p><strong>Monthly Expenses:</strong> â‚¹{profile.monthlyExpenses}</p>\r\n//       <p><strong>Risk Appetite:</strong> {profile.riskAppetite}</p>\r\n//       <p><strong>Financial Goal:</strong> {profile.financialGoal}</p>\r\n//       <p><strong>Investment Horizon:</strong> {profile.investmentHorizon} years</p>\r\n\r\n//       {recommendation && (\r\n//         <div className=\"mt-6 p-4 border border-gray-300 bg-gray-50 rounded\">\r\n//           <h3 className=\"text-xl font-semibold mb-2\">ðŸ’¡ Investment Recommendation</h3>\r\n//           <p>{recommendation}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// import { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\r\n\r\n// const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n// const investmentData = [\r\n//   { name: 'Stocks', value: 4000 },\r\n//   { name: 'Mutual Funds', value: 3000 },\r\n//   { name: 'Real Estate', value: 2000 },\r\n//   { name: 'Gold', value: 1000 }\r\n// ];\r\n\r\n// <PieChart width={400} height={300}>\r\n//   <Pie\r\n//     data={investmentData}\r\n//     cx={200}\r\n//     cy={150}\r\n//     labelLine={false}\r\n//     label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n//     outerRadius={100}\r\n//     fill=\"#8884d8\"\r\n//     dataKey=\"value\"\r\n//   >\r\n//     {investmentData.map((entry, index) => (\r\n//       <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n//     ))}\r\n//   </Pie>\r\n//   <Tooltip />\r\n//   <Legend />\r\n// </PieChart>import { jwtDecode } from \"jwt-decode\"; // âœ… Correct import\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}